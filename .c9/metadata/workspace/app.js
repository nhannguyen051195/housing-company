{"filter":false,"title":"app.js","tooltip":"/app.js","undoManager":{"mark":40,"position":40,"stack":[[{"start":{"row":0,"column":18},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":1}],[{"start":{"row":1,"column":0},"end":{"row":41,"column":3},"action":"insert","lines":["var express = require(\"express\");","var app = express();","var bodyParser = require(\"body-parser\");","","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","","var campgrounds = [","        {name: \"Salmon Creek\", image: \"https://farm9.staticflickr.com/8442/7962474612_bf2baf67c0.jpg\"},","        {name: \"Granite Hill\", image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\"},","        {name: \"Mountain Goat's Rest\", image: \"https://farm7.staticflickr.com/6057/6234565071_4d20668bbd.jpg\"},","        {name: \"Salmon Creek\", image: \"https://farm9.staticflickr.com/8442/7962474612_bf2baf67c0.jpg\"},","        {name: \"Granite Hill\", image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\"},","        {name: \"Mountain Goat's Rest\", image: \"https://farm7.staticflickr.com/6057/6234565071_4d20668bbd.jpg\"},","        {name: \"Granite Hill\", image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\"},","        {name: \"Mountain Goat's Rest\", image: \"https://farm7.staticflickr.com/6057/6234565071_4d20668bbd.jpg\"}","];","    ","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","app.get(\"/campgrounds\", function(req, res){","    res.render(\"campgrounds\",{campgrounds:campgrounds});","});","","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var newCampground = {name: name, image: image}","    campgrounds.push(newCampground);","    //redirect back to campgrounds page","    res.redirect(\"/campgrounds\");","});","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":41,"column":3},"action":"remove","lines":["// JavaScript File","var express = require(\"express\");","var app = express();","var bodyParser = require(\"body-parser\");","","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","","var campgrounds = [","        {name: \"Salmon Creek\", image: \"https://farm9.staticflickr.com/8442/7962474612_bf2baf67c0.jpg\"},","        {name: \"Granite Hill\", image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\"},","        {name: \"Mountain Goat's Rest\", image: \"https://farm7.staticflickr.com/6057/6234565071_4d20668bbd.jpg\"},","        {name: \"Salmon Creek\", image: \"https://farm9.staticflickr.com/8442/7962474612_bf2baf67c0.jpg\"},","        {name: \"Granite Hill\", image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\"},","        {name: \"Mountain Goat's Rest\", image: \"https://farm7.staticflickr.com/6057/6234565071_4d20668bbd.jpg\"},","        {name: \"Granite Hill\", image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\"},","        {name: \"Mountain Goat's Rest\", image: \"https://farm7.staticflickr.com/6057/6234565071_4d20668bbd.jpg\"}","];","    ","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","app.get(\"/campgrounds\", function(req, res){","    res.render(\"campgrounds\",{campgrounds:campgrounds});","});","","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var newCampground = {name: name, image: image}","    campgrounds.push(newCampground);","    //redirect back to campgrounds page","    res.redirect(\"/campgrounds\");","});","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":3},{"start":{"row":0,"column":0},"end":{"row":89,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\")","","mongoose.connect(\"mongodb://localhost/yelp_camp\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","","// SCHEMA SETUP","var campgroundSchema = new mongoose.Schema({","   name: String,","   image: String,","   description: String","});","","var Campground = mongoose.model(\"Campground\", campgroundSchema);","","// Campground.create(","//      {","//          name: \"Granite Hill\", ","//          image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\",","//          description: \"This is a huge granite hill, no bathrooms.  No water. Beautiful granite!\"","         ","//      },","//      function(err, campground){","//       if(err){","//           console.log(err);","//       } else {","//           console.log(\"NEWLY CREATED CAMPGROUND: \");","//           console.log(campground);","//       }","//     });","","    ","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id, function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":89,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\")","","mongoose.connect(\"mongodb://localhost/yelp_camp\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","","// SCHEMA SETUP","var campgroundSchema = new mongoose.Schema({","   name: String,","   image: String,","   description: String","});","","var Campground = mongoose.model(\"Campground\", campgroundSchema);","","// Campground.create(","//      {","//          name: \"Granite Hill\", ","//          image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\",","//          description: \"This is a huge granite hill, no bathrooms.  No water. Beautiful granite!\"","         ","//      },","//      function(err, campground){","//       if(err){","//           console.log(err);","//       } else {","//           console.log(\"NEWLY CREATED CAMPGROUND: \");","//           console.log(campground);","//       }","//     });","","    ","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id, function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":4},{"start":{"row":0,"column":0},"end":{"row":89,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\")","","mongoose.connect(\"mongodb://localhost/yelp_camp\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","","// SCHEMA SETUP","var campgroundSchema = new mongoose.Schema({","   name: String,","   image: String,","   description: String","});","","var Campground = mongoose.model(\"Campground\", campgroundSchema);","","// Campground.create(","//      {","//          name: \"Granite Hill\", ","//          image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\",","//          description: \"This is a huge granite hill, no bathrooms.  No water. Beautiful granite!\"","         ","//      },","//      function(err, campground){","//       if(err){","//           console.log(err);","//       } else {","//           console.log(\"NEWLY CREATED CAMPGROUND: \");","//           console.log(campground);","//       }","//     });","","    ","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id, function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":18,"column":1},"end":{"row":18,"column":2},"action":"remove","lines":["/"],"id":9},{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":19,"column":1},"end":{"row":19,"column":2},"action":"remove","lines":["/"],"id":10},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":21,"column":1},"end":{"row":21,"column":2},"action":"remove","lines":["/"],"id":11},{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":20,"column":4},"end":{"row":20,"column":5},"action":"remove","lines":[" "],"id":12},{"start":{"row":20,"column":3},"end":{"row":20,"column":4},"action":"remove","lines":[" "]},{"start":{"row":20,"column":2},"end":{"row":20,"column":3},"action":"remove","lines":[" "]},{"start":{"row":20,"column":1},"end":{"row":20,"column":2},"action":"remove","lines":["/"]},{"start":{"row":20,"column":0},"end":{"row":20,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":2},"action":"remove","lines":["//"],"id":13}],[{"start":{"row":24,"column":0},"end":{"row":24,"column":3},"action":"remove","lines":["// "],"id":14}],[{"start":{"row":25,"column":0},"end":{"row":25,"column":2},"action":"remove","lines":["//"],"id":15}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":2},"action":"remove","lines":["//"],"id":16}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":3},"action":"remove","lines":["// "],"id":17}],[{"start":{"row":28,"column":0},"end":{"row":28,"column":2},"action":"remove","lines":["//"],"id":18}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"remove","lines":["//"],"id":19}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"remove","lines":["//"],"id":20}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":3},"action":"remove","lines":["// "],"id":21}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":3},"action":"remove","lines":["// "],"id":22}],[{"start":{"row":46,"column":27},"end":{"row":46,"column":28},"action":"insert","lines":["."],"id":23},{"start":{"row":46,"column":28},"end":{"row":46,"column":29},"action":"insert","lines":["e"]},{"start":{"row":46,"column":29},"end":{"row":46,"column":30},"action":"insert","lines":["j"]},{"start":{"row":46,"column":30},"end":{"row":46,"column":31},"action":"insert","lines":["s"]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["mongoose.connect(\"mongodb://localhost/yelp_camp\");",""],"id":24},{"start":{"row":5,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["mongoose.connect('mongodb://localhost:27017/cat_app', { useNewUrlParser: true }); ","",""]}],[{"start":{"row":5,"column":44},"end":{"row":5,"column":51},"action":"remove","lines":["cat_app"],"id":25},{"start":{"row":5,"column":44},"end":{"row":5,"column":45},"action":"insert","lines":["y"]},{"start":{"row":5,"column":45},"end":{"row":5,"column":46},"action":"insert","lines":["e"]},{"start":{"row":5,"column":46},"end":{"row":5,"column":47},"action":"insert","lines":["l"]},{"start":{"row":5,"column":47},"end":{"row":5,"column":48},"action":"insert","lines":["p"]},{"start":{"row":5,"column":48},"end":{"row":5,"column":49},"action":"insert","lines":["-"]}],[{"start":{"row":5,"column":48},"end":{"row":5,"column":49},"action":"remove","lines":["-"],"id":26}],[{"start":{"row":5,"column":48},"end":{"row":5,"column":49},"action":"insert","lines":["_"],"id":27},{"start":{"row":5,"column":49},"end":{"row":5,"column":50},"action":"insert","lines":["c"]},{"start":{"row":5,"column":50},"end":{"row":5,"column":51},"action":"insert","lines":["a"]},{"start":{"row":5,"column":51},"end":{"row":5,"column":52},"action":"insert","lines":["m"]},{"start":{"row":5,"column":52},"end":{"row":5,"column":53},"action":"insert","lines":["p"]}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":3},"action":"insert","lines":["// "],"id":30},{"start":{"row":20,"column":0},"end":{"row":20,"column":3},"action":"insert","lines":["// "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"insert","lines":["//"]},{"start":{"row":22,"column":0},"end":{"row":22,"column":3},"action":"insert","lines":["// "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":3},"action":"insert","lines":["// "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":3},"action":"insert","lines":["// "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":3},"action":"insert","lines":["// "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"insert","lines":["//"]},{"start":{"row":28,"column":0},"end":{"row":28,"column":3},"action":"insert","lines":["// "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["//"]},{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"insert","lines":["//"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"insert","lines":["//"]},{"start":{"row":32,"column":0},"end":{"row":32,"column":3},"action":"insert","lines":["// "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":19,"column":0},"end":{"row":33,"column":10},"action":"remove","lines":["//  Campground.create(","//       {","//       name: \"Granite Hill\", ","//           image: \"https://farm1.staticflickr.com/60/215827008_6489cd30c3.jpg\",","//           description: \"This is a huge granite hill, no bathrooms.  No water. Beautiful granite!\"","         ","//      },","//       function(err, campground){","//       if(err){","//           console.log(err);","//       } else {","//           console.log(\"NEWLY CREATED CAMPGROUND: \");","//           console.log(campground);","//       }","//     });"],"id":31},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"insert","lines":["\\"]},{"start":{"row":19,"column":1},"end":{"row":19,"column":2},"action":"insert","lines":["\\"]}],[{"start":{"row":19,"column":1},"end":{"row":19,"column":2},"action":"remove","lines":["\\"],"id":32},{"start":{"row":19,"column":0},"end":{"row":19,"column":1},"action":"remove","lines":["\\"]}],[{"start":{"row":0,"column":0},"end":{"row":76,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\")","","mongoose.connect('mongodb://localhost:27017/yelp_camp', { useNewUrlParser: true }); ","","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","","// SCHEMA SETUP","var campgroundSchema = new mongoose.Schema({","   name: String,","   image: String,","   description: String","});","","var Campground = mongoose.model(\"Campground\", campgroundSchema);","","","","    ","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index.ejs\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id, function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":33},{"start":{"row":0,"column":0},"end":{"row":67,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v3\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":["/"],"id":34},{"start":{"row":10,"column":1},"end":{"row":10,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"insert","lines":["/"],"id":35},{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"insert","lines":["/"]}],[{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"remove","lines":["/"],"id":36},{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"remove","lines":["/"]}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v3\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","//seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":37},{"start":{"row":0,"column":0},"end":{"row":67,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v3\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v3\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"new.ejs\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"show\", {campground: foundCampground});","        }","    });","})","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":38},{"start":{"row":0,"column":0},"end":{"row":107,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v4\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\", function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":107,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v4\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\", function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":39},{"start":{"row":0,"column":0},"end":{"row":108,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v4\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\", function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":108,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v4\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\", function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":40},{"start":{"row":0,"column":0},"end":{"row":108,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v4\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\", function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":108,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v4\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\", function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":41},{"start":{"row":0,"column":0},"end":{"row":176,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", isLoggedIn, function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\",isLoggedIn,function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","","//  ===========","// AUTH ROUTES","//  ===========","","// show register form","app.get(\"/register\", function(req, res){","   res.render(\"register\"); ","});","//handle sign up logic","app.post(\"/register\", function(req, res){","    var newUser = new User({username: req.body.username});","    User.register(newUser, req.body.password, function(err, user){","        if(err){","            console.log(err);","            return res.render(\"register\");","        }","        passport.authenticate(\"local\")(req, res, function(){","           res.redirect(\"/campgrounds\"); ","        });","    });","});","","// show login form","app.get(\"/login\", function(req, res){","   res.render(\"login\"); ","});","// handling login logic","app.post(\"/login\", passport.authenticate(\"local\", ","    {","        successRedirect: \"/campgrounds\",","        failureRedirect: \"/login\"","    }), function(req, res){","});","","// logic route","app.get(\"/logout\", function(req, res){","   req.logout();","   res.redirect(\"/campgrounds\");","});","","function isLoggedIn(req, res, next){","    if(req.isAuthenticated()){","        return next();","    }","    res.redirect(\"/login\");","}","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":176,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});","","","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", isLoggedIn, function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\",isLoggedIn,function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});","","","//  ===========","// AUTH ROUTES","//  ===========","","// show register form","app.get(\"/register\", function(req, res){","   res.render(\"register\"); ","});","//handle sign up logic","app.post(\"/register\", function(req, res){","    var newUser = new User({username: req.body.username});","    User.register(newUser, req.body.password, function(err, user){","        if(err){","            console.log(err);","            return res.render(\"register\");","        }","        passport.authenticate(\"local\")(req, res, function(){","           res.redirect(\"/campgrounds\"); ","        });","    });","});","","// show login form","app.get(\"/login\", function(req, res){","   res.render(\"login\"); ","});","// handling login logic","app.post(\"/login\", passport.authenticate(\"local\", ","    {","        successRedirect: \"/campgrounds\",","        failureRedirect: \"/login\"","    }), function(req, res){","});","","// logic route","app.get(\"/logout\", function(req, res){","   req.logout();","   res.redirect(\"/campgrounds\");","});","","function isLoggedIn(req, res, next){","    if(req.isAuthenticated()){","        return next();","    }","    res.redirect(\"/login\");","}","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":42},{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":43},{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":14,"column":48},"end":{"row":14,"column":49},"action":"insert","lines":[";"],"id":44}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\");","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":45},{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v8\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","// seedDB(); //seed the database","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v8\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","// seedDB(); //seed the database","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":46},{"start":{"row":0,"column":0},"end":{"row":46,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requiring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v9\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","// seedDB(); //seed the database","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}],[{"start":{"row":0,"column":0},"end":{"row":46,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requiring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v9\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","// seedDB(); //seed the database","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":47},{"start":{"row":0,"column":0},"end":{"row":48,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    methodOverride = require(\"method-override\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requiring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v10\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","app.use(methodOverride(\"_method\"));","// seedDB(); //seed the database","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"]}]]},"ace":{"folds":[],"scrolltop":185.5,"scrollleft":0,"selection":{"start":{"row":48,"column":3},"end":{"row":48,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":50,"mode":"ace/mode/javascript"}},"timestamp":1540384243073,"hash":"a9c5b1442af139f8c8baa2439dd7be2026d7536b"}